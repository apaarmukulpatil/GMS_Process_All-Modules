<Activity mc:Ignorable="sap sap2010" x:Class="A10_2_Guarantee_Details" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_InternalRatingAsPerMLI" Type="InArgument(x:String)" />
    <x:Property Name="out_ActualInternalRatingAsPerMLI" Type="OutArgument(x:String)" />
    <x:Property Name="in_ITPANApplicability" Type="InArgument(x:String)" />
    <x:Property Name="out_ActualITPANApplicability" Type="OutArgument(x:String)" />
    <x:Property Name="in_UAMApplicability" Type="InArgument(x:String)" />
    <x:Property Name="out_ActualUAMApplicability" Type="OutArgument(x:String)" />
    <x:Property Name="in_ApplicationTypeOfLoan" Type="InArgument(x:String)" />
    <x:Property Name="in_Tenure" Type="InArgument(x:String)" />
    <x:Property Name="in_NatureOfIndustry" Type="InArgument(x:String)" />
    <x:Property Name="in_CeilingLimit" Type="InArgument(x:String)" />
    <x:Property Name="out_CeilingLimit" Type="OutArgument(x:String)" />
    <x:Property Name="in_UpperLimit" Type="InArgument(x:String)" />
    <x:Property Name="out_UpperLimit" Type="OutArgument(x:String)" />
    <x:Property Name="out_MoratoriumPeriod" Type="OutArgument(x:String)" />
    <x:Property Name="in_MoratoriumPeriod" Type="InArgument(x:String)" />
    <x:Property Name="in_ConstitutionOfBorrower" Type="InArgument(x:String)" />
    <x:Property Name="out_ActualConstitutionOfBorrower" Type="OutArgument(x:String)" />
    <x:Property Name="in_BorrowerType" Type="InArgument(x:String)" />
    <x:Property Name="out_ActualBorrowerType" Type="OutArgument(x:String)" />
    <x:Property Name="in_GuaranteeStartDate" Type="InArgument(x:String)" />
    <x:Property Name="out_ActualGuaranteeStartDate" Type="OutArgument(x:String)" />
    <x:Property Name="in_GuaranteeEndDate" Type="InArgument(x:String)" />
    <x:Property Name="out_ActualGuaranteeEndDate" Type="OutArgument(x:String)" />
    <x:Property Name="in_SelectInternalRatingAsPerMLI" Type="InArgument(x:String)" />
    <x:Property Name="out_ActualSelectInternalRatingAsPerMLI" Type="OutArgument(x:String)" />
    <x:Property Name="in_SelectITPANApplicability" Type="InArgument(x:String)" />
    <x:Property Name="out_ActualSelectITPANApplicability" Type="OutArgument(x:String)" />
    <x:Property Name="in_SelectUAMApplicability" Type="InArgument(x:String)" />
    <x:Property Name="out_ActualSelectUAMApplicability" Type="OutArgument(x:String)" />
    <x:Property Name="out_ActualApplicationTypeOfLoan" Type="OutArgument(x:String)" />
    <x:Property Name="out_ActualTenure" Type="OutArgument(x:String)" />
    <x:Property Name="out_ActualNatureOfIndustry" Type="OutArgument(x:String)" />
    <x:Property Name="out_Status" Type="OutArgument(x:String)" />
    <x:Property Name="out_GuaranteeDetailsNextButtonDisabled" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_GuaranteeDetailsMessage" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_SchemeEndDate" Type="InArgument(x:String)" />
    <x:Property Name="in_SchemeStartDate" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>869,2461</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>A10_2_Guarantee_Details_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Core.Activities.TextModifications</x:String>
      <x:String>UiPath.Activities.System.Workflow.Business</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Globalization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="A10_2_Guarantee_Details" sap:VirtualizedContainerService.HintSize="476,2396" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="v_GetTextForInternalRatingAsPerMLI" />
      <Variable x:TypeArguments="x:String" Name="v_GetTextForITPANApplicability" />
      <Variable x:TypeArguments="x:String" Name="v_GetTextForUAMApplicability" />
      <Variable x:TypeArguments="s:String[]" Name="v_Arr_Constitution_Of_Borrower" />
      <Variable x:TypeArguments="x:Boolean" Name="v_NoRecordsConstitutionBorrower" />
      <Variable x:TypeArguments="x:Boolean" Name="v_NoRecordsBorrowerType" />
      <Variable x:TypeArguments="s:String[]" Name="v_Arr_BorrowerType" />
      <Variable x:TypeArguments="x:String" Name="v_Month" />
      <Variable x:TypeArguments="x:String" Name="v_Day" />
      <Variable x:TypeArguments="x:Boolean" Name="v_NatureOfIndustryExists" />
      <Variable x:TypeArguments="x:String" Name="v_GetTextForGuranteeDetailMessage" />
      <Variable x:TypeArguments="x:String" Name="v_DateMonthYear" />
      <Variable x:TypeArguments="x:String" Name="v_Year" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BrowserScope Browser="{x:Null}" BrowserType="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" DisplayName="Attach Browser For Guarantee Details" sap:VirtualizedContainerService.HintSize="434,2304" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="d8264bf39d1826383e55cb97d7e62b3f" Selector="&lt;html app='chrome.exe' title='GMS' /&gt;">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Guarantee Details " sap:VirtualizedContainerService.HintSize="376,2158" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If sap2010:Annotation.AnnotationText="Select Constitution Of Borrower Available" Condition="[String.IsNullOrEmpty(in_ConstitutionOfBorrower)]" DisplayName="Check_If_Constitution Of Borrower Available" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="If_19">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Constitution Of Borrower Is Nothing" sap:VirtualizedContainerService.HintSize="376,456" sap2010:WorkflowViewState.IdRef="Sequence_35">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Not Entered Constitution Of Borrower</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign DisplayName="Actual Constitution Of Borrower Is Nothing" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_ActualConstitutionOfBorrower]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">User Has Not Entered Constitution Of Borrower</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName=" Constitution Of Borrower" sap:VirtualizedContainerService.HintSize="476,924" sap2010:WorkflowViewState.IdRef="Sequence_39">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign_Split_Given Input" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:String[]">[v_Arr_Constitution_Of_Borrower]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[in_ConstitutionOfBorrower.Split(","C)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Multi Select Button" sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f8685f48-76b0-494f-96eb-b05916a03254" InformativeScreenshot="5289d5e6e9766467c75376e89469adf9" Selector="&lt;webctrl tag='LABEL' aaname='Constitution of Borrower' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='DIV' css-selector='body&amp;gt;app-root&amp;gt;app-main-template&amp;gt;div&amp;gt;div&amp;gt;app-scheme-details&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-tabview&amp;gt;div&amp;gt;div&amp;gt;p-tabpanel&amp;gt;div&amp;gt;app-guarantee-details-form&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;app-global-multiselect&amp;gt;form&amp;gt;div&amp;gt;p-multiselect&amp;gt;div&amp;gt;div&amp;gt;div' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:Click.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:Click>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each_Constitution Of Borrower" sap:VirtualizedContainerService.HintSize="434,586" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[v_Arr_Constitution_Of_Borrower]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body_Constitution Of Borrower" sap:VirtualizedContainerService.HintSize="376,463" sap2010:WorkflowViewState.IdRef="Sequence_38">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Enter Constitution Of Borrower" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_8" SimulateType="True" Text="[item.ToString]">
                            <ui:TypeInto.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a23b6201-9cd5-4d21-9e57-af7f2e685f8b" InformativeScreenshot="3b9dfa1c6e85e1f867af9bbea9c579d9" Selector="&lt;webctrl aria-role='textbox' tag='INPUT' type='text' /&gt;" WaitForReady="COMPLETE">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                              </ui:Target>
                            </ui:TypeInto.Target>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:TypeInto>
                          <ui:UiElementExists DisplayName="Element Exist_For No Records_Constitutionof Borrower" Exists="[v_NoRecordsConstitutionBorrower]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                            <ui:UiElementExists.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c23c59c4-d517-496c-8f5d-243ab730e23e" InformativeScreenshot="e5c11ec8b46b087a6e5d6b61b2a6e031" Selector="&lt;webctrl tag='LI' aaname=' No results found ' css-selector='body&amp;gt;app-root&amp;gt;app-main-template&amp;gt;div&amp;gt;div&amp;gt;app-scheme-details&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-tabview&amp;gt;div&amp;gt;div&amp;gt;p-tabpanel&amp;gt;div&amp;gt;app-guarantee-details-form&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;app-global-multiselect&amp;gt;form&amp;gt;div&amp;gt;p-multiselect&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;ul&amp;gt;li' /&gt;" TimeoutMS="5000" WaitForReady="COMPLETE" />
                            </ui:UiElementExists.Target>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:UiElementExists>
                          <If Condition="[v_NoRecordsConstitutionBorrower]" DisplayName="Check_If_Entered Constitution Of Borrower Record Available" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_18">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Record_Not Found" sap:VirtualizedContainerService.HintSize="376,456" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">["Entered Constitution Of Borrower Is Not Available: "+item.ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeWorkflowFile>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <Assign DisplayName="Not Found_Constitutio Of Borrower" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[out_ActualConstitutionOfBorrower]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["No Records Found For Constitution Of Borrower"+item.ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Constitution of Borrower" sap:VirtualizedContainerService.HintSize="376,298" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click_Add Constitution Of Borrower" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                                  <ui:Click.CursorPosition>
                                    <ui:CursorPosition Position="Center">
                                      <ui:CursorPosition.OffsetX>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetX>
                                      <ui:CursorPosition.OffsetY>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetY>
                                    </ui:CursorPosition>
                                  </ui:Click.CursorPosition>
                                  <ui:Click.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7754b6d8-5f15-4dab-9768-2f752b35afb6" InformativeScreenshot="14073d2c70cecddee5097e8c26b467e2" Selector="&lt;webctrl css-selector='body&amp;gt;app-root&amp;gt;app-main-template&amp;gt;div&amp;gt;div&amp;gt;app-scheme-details&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-tabview&amp;gt;div&amp;gt;div&amp;gt;p-tabpanel&amp;gt;div&amp;gt;app-guarantee-details-form&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;app-global-multiselect&amp;gt;form&amp;gt;div&amp;gt;p-multiselect&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;ul&amp;gt;p-multiselectitem&amp;gt;li&amp;gt;div' tag='DIV' class='p-checkbox p-component' parentclass='p-ripple p-element p-multiselect-item' idx='1' /&gt;" WaitForReady="COMPLETE">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                    </ui:Target>
                                  </ui:Click.Target>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:Click>
                                <Assign DisplayName="Actual Constitution Of Borrower" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[out_ActualConstitutionOfBorrower]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </If.Else>
            </If>
            <If sap2010:Annotation.AnnotationText="Select Borrower Type Available" Condition="[in_BorrowerType=Nothing]" DisplayName="Check_If_Borrower Type Available" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="If_21">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Constitution Of Borrower Type Is Nothing" sap:VirtualizedContainerService.HintSize="376,456" sap2010:WorkflowViewState.IdRef="Sequence_40">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Not Entered Borrower Type</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_ActualBorrowerType]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">User Has Not Entered Borrower Type</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="845,1486" sap2010:WorkflowViewState.IdRef="Sequence_44">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign_Split_Given Input" sap:VirtualizedContainerService.HintSize="803,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:String[]">[v_Arr_BorrowerType]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[in_BorrowerType.Split(","C)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Multi Select Button" sap:VirtualizedContainerService.HintSize="803,106" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f8685f48-76b0-494f-96eb-b05916a03254" InformativeScreenshot="5289d5e6e9766467c75376e89469adf9" Selector="&lt;webctrl aaname='Borrower Type' tag='LABEL' /&gt;&lt;nav up='2' /&gt;&lt;webctrl tag='DIV' css-selector='body&amp;gt;app-root&amp;gt;app-main-template&amp;gt;div&amp;gt;div&amp;gt;app-scheme-details&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-tabview&amp;gt;div&amp;gt;div&amp;gt;p-tabpanel&amp;gt;div&amp;gt;app-guarantee-details-form&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;app-global-multiselect&amp;gt;form&amp;gt;div&amp;gt;p-multiselect&amp;gt;div&amp;gt;div&amp;gt;div' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:Click.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:Click>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Borrower Type" sap:VirtualizedContainerService.HintSize="803,1148" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[v_Arr_BorrowerType]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="767,1025" sap2010:WorkflowViewState.IdRef="Sequence_43">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Enter Borrower Type" EmptyField="True" sap:VirtualizedContainerService.HintSize="725,134" sap2010:WorkflowViewState.IdRef="TypeInto_9" SimulateType="True" Text="[item.ToString]">
                            <ui:TypeInto.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a23b6201-9cd5-4d21-9e57-af7f2e685f8b" InformativeScreenshot="3b9dfa1c6e85e1f867af9bbea9c579d9" Selector="&lt;webctrl aria-role='textbox' tag='INPUT' type='text' /&gt;" WaitForReady="COMPLETE">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                              </ui:Target>
                            </ui:TypeInto.Target>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:TypeInto>
                          <ui:UiElementExists DisplayName="Element Exist_For No Records_Borrower Type" Exists="[v_NoRecordsBorrowerType]" sap:VirtualizedContainerService.HintSize="725,106" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                            <ui:UiElementExists.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c23c59c4-d517-496c-8f5d-243ab730e23e" InformativeScreenshot="e5c11ec8b46b087a6e5d6b61b2a6e031" Selector="&lt;webctrl tag='LI' aaname=' No results found ' css-selector='body&amp;gt;app-root&amp;gt;app-main-template&amp;gt;div&amp;gt;div&amp;gt;app-scheme-details&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-tabview&amp;gt;div&amp;gt;div&amp;gt;p-tabpanel&amp;gt;div&amp;gt;app-guarantee-details-form&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;app-global-multiselect&amp;gt;form&amp;gt;div&amp;gt;p-multiselect&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;ul&amp;gt;li' /&gt;" TimeoutMS="5000" WaitForReady="COMPLETE" />
                            </ui:UiElementExists.Target>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:UiElementExists>
                          <If Condition="[v_NoRecordsBorrowerType]" DisplayName="Check_If_Entered Borrower Type Available" sap:VirtualizedContainerService.HintSize="725,613" sap2010:WorkflowViewState.IdRef="If_20">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Record_Is Nothing" sap:VirtualizedContainerService.HintSize="376,456" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">["Entered Borrower Type Is Not Available: "+item.ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeWorkflowFile>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[out_ActualBorrowerType]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["No Records Found For Borrower Type "+item]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,245.6" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click_Add Borrower Type" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                                  <ui:Click.CursorPosition>
                                    <ui:CursorPosition Position="Center">
                                      <ui:CursorPosition.OffsetX>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetX>
                                      <ui:CursorPosition.OffsetY>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetY>
                                    </ui:CursorPosition>
                                  </ui:Click.CursorPosition>
                                  <ui:Click.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7754b6d8-5f15-4dab-9768-2f752b35afb6" InformativeScreenshot="14073d2c70cecddee5097e8c26b467e2" Selector="&lt;webctrl css-selector='body&amp;gt;app-root&amp;gt;app-main-template&amp;gt;div&amp;gt;div&amp;gt;app-scheme-details&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-tabview&amp;gt;div&amp;gt;div&amp;gt;p-tabpanel&amp;gt;div&amp;gt;app-guarantee-details-form&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;app-global-multiselect&amp;gt;form&amp;gt;div&amp;gt;p-multiselect&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;ul&amp;gt;p-multiselectitem&amp;gt;li&amp;gt;div&amp;gt;div' tag='DIV' class='p-checkbox-box' idx='1' /&gt;" WaitForReady="COMPLETE">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                    </ui:Target>
                                  </ui:Click.Target>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:Click>
                                <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[out_ActualBorrowerType]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </If.Else>
            </If>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text For Internal Rating/As per MLI" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_1">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="551caadb-7f84-4165-8f13-b0ee32af451d" InformativeScreenshot="c0975f5b9e61f238588c6268517a91be" Selector="&lt;webctrl tag='SPAN' class='side ng-star-inserted' css-selector='body&amp;gt;app-root&amp;gt;app-main-template&amp;gt;div&amp;gt;div&amp;gt;app-scheme-details&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-tabview&amp;gt;div&amp;gt;div&amp;gt;p-tabpanel&amp;gt;div&amp;gt;app-guarantee-details-form&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;app-global-toggle&amp;gt;form&amp;gt;div&amp;gt;span' parentclass='full-width ng-star-inserted' idx='1' /&gt;" WaitForReady="COMPLETE">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                </ui:Target>
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[v_GetTextForInternalRatingAsPerMLI]</OutArgument>
              </ui:GetValue.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:GetValue>
            <If sap2010:Annotation.AnnotationText="Internal Rating/As per MLI" Condition="[v_GetTextForInternalRatingAsPerMLI.ToLower.Equals(in_SelectInternalRatingAsPerMLI.ToLower)]" DisplayName="Check If Internal Rating/As per MLI Is &quot;Yes&quot;" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Internal_Rating_Yes" sap:VirtualizedContainerService.HintSize="1260,901" sap2010:WorkflowViewState.IdRef="Sequence_49">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Actual_Internal Select Rating_Yes" sap:VirtualizedContainerService.HintSize="1218,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_ActualSelectInternalRatingAsPerMLI]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[String.IsNullOrEmpty(in_InternalRatingAsPerMLI)]" DisplayName="Check If Internal Rating/As per MLI Is Nothing" sap:VirtualizedContainerService.HintSize="1218,709" sap2010:WorkflowViewState.IdRef="If_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Internal Rating As Per MLI Nothing" sap:VirtualizedContainerService.HintSize="376,304" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_56" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Not Entered Internal Rating As Per MLI</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <Assign DisplayName="Actual_Internal Rating As Per MLI Nothing" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_ActualInternalRatingAsPerMLI]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">User Has Not Entered Internal Rating As Per MLI</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <If Condition="[CInt(in_InternalRatingAsPerMLI.Length)&lt;=8]" DisplayName="Check If Internal Rating As per MLI Has More Than 8 Characters" sap:VirtualizedContainerService.HintSize="797,552" sap2010:WorkflowViewState.IdRef="If_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Less Than 8 Characters" sap:VirtualizedContainerService.HintSize="376,326" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Enter Internal Rating/As per MLI" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_1" SimulateType="True" Text="[in_InternalRatingAsPerMLI]">
                              <ui:TypeInto.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ff3421f2-899c-46a8-9189-daa6c6037f2a" InformativeScreenshot="044872812802acdcebe32eec68edd51c" Selector="&lt;webctrl tag='INPUT' type='text' parentclass='p-inputgroup gray-one ng-star-inserted success' placeholder='Enter Threshold' /&gt;" WaitForReady="COMPLETE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:TypeInto.Target>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:TypeInto>
                            <Assign DisplayName="Actual_Internal Rating As Per MLI" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_ActualInternalRatingAsPerMLI]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[in_InternalRatingAsPerMLI]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="More Than 8 Characters" sap:VirtualizedContainerService.HintSize="376,395" sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_57" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Entered More Than 8 Characters In Internal Rating As Per MLI</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_58" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Assign DisplayName="Actual Interal Ratig As Per MLI Incorrect" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_ActualInternalRatingAsPerMLI]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["User Has Entered More Than 8 Characters In Internal Rating As Per MLI"]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <If Condition="[(v_GetTextForInternalRatingAsPerMLI.ToLower.Equals(&quot;no&quot;) And in_SelectInternalRatingAsPerMLI.ToLower.Equals(&quot;yes&quot;)) Or (v_GetTextForInternalRatingAsPerMLI.ToLower.Equals(&quot;yes&quot;) And in_SelectInternalRatingAsPerMLI.ToLower.Equals(&quot;no&quot;))]" DisplayName="Check If Yes Or No" sap:VirtualizedContainerService.HintSize="683,546" sap2010:WorkflowViewState.IdRef="If_30">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName=" Yes And Type Internal Rating" sap:VirtualizedContainerService.HintSize="376,389" sap2010:WorkflowViewState.IdRef="Sequence_64">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Internal Rating/As per MLI Radio Button" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_14" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5cb9cb8e-4056-46b5-8f18-c49569490a60" InformativeScreenshot="4f068896de88e2e705f1d902be2d4b60" Selector="&lt;webctrl aria-role='checkbox' css-selector='body&amp;gt;app-root&amp;gt;app-main-template&amp;gt;div&amp;gt;div&amp;gt;app-scheme-details&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-tabview&amp;gt;div&amp;gt;div&amp;gt;p-tabpanel&amp;gt;div&amp;gt;app-guarantee-details-form&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;app-global-toggle&amp;gt;form&amp;gt;div&amp;gt;p-togglebutton&amp;gt;div' tag='DIV' class='p-ripple p-element p-button p-togglebutton p-component' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:Click.Target>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:Click>
                      <If Condition="[in_InternalRatingAsPerMLI=Nothing]" DisplayName="Check If Internal Rating/As per MLI Is Nothing" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="If_32">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Internal Rating Nothing" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_67">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_55" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Not Entered Internal Rating As Per MLI</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <Assign DisplayName="Actual  Rating Nothing" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_ActualInternalRatingAsPerMLI]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">User Has Not Entered Internal Rating As Per MLI</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="More Than 8 Characters" sap:VirtualizedContainerService.HintSize="767,644" sap2010:WorkflowViewState.IdRef="Sequence_70">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[CInt(in_InternalRatingAsPerMLI.Length)&lt;=8]" DisplayName="Check If Internal Rating As per MLI Has More Than 8 Characters" sap:VirtualizedContainerService.HintSize="725,552" sap2010:WorkflowViewState.IdRef="If_31">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence DisplayName="Less Than 8 Characters" sap:VirtualizedContainerService.HintSize="304,243" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Enter Internal Rating/As per MLI" EmptyField="True" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="TypeInto_10" SimulateType="True" Text="[in_InternalRatingAsPerMLI]">
                                    <ui:TypeInto.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ff3421f2-899c-46a8-9189-daa6c6037f2a" InformativeScreenshot="044872812802acdcebe32eec68edd51c" Selector="&lt;webctrl aaname='Internal Rating/As per MLI' tag='LABEL' /&gt;&lt;nav up='4' /&gt;&lt;webctrl tag='INPUT' type='text' /&gt;" WaitForReady="COMPLETE">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                      </ui:Target>
                                    </ui:TypeInto.Target>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:TypeInto>
                                  <Assign DisplayName="Actual Internal Rating" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_ActualInternalRatingAsPerMLI]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_InternalRatingAsPerMLI]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="More Than 8 Characters" sap:VirtualizedContainerService.HintSize="376,395" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File More Than 8 Characters" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_53" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Entered More Than 8 Characters In Internal Rating As Per MLI</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_54" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <Assign DisplayName="Actual Interal Rating Incorrect " sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_ActualInternalRatingAsPerMLI]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">["User Has Entered More Than 8 Characters In Internal Rating As Per MLI"]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                      <Assign DisplayName="Actual select Rating_Yes" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_ActualSelectInternalRatingAsPerMLI]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Yes</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Assign DisplayName="Actual select Rating_No" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_ActualSelectInternalRatingAsPerMLI]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">No</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </If.Else>
            </If>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text For ITPAN Applicability" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_2">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="551caadb-7f84-4165-8f13-b0ee32af451d" InformativeScreenshot="40fc8e6f41bd3e2eb74911d542e7716e" Selector="&lt;webctrl aaname='Yes' tag='SPAN' class='side ng-star-inserted' innertext='Yes' parentclass='full-width ng-star-inserted' idx='7' /&gt;" WaitForReady="COMPLETE">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                </ui:Target>
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[v_GetTextForITPANApplicability]</OutArgument>
              </ui:GetValue.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:GetValue>
            <If sap2010:Annotation.AnnotationText="ITPAN Applicability" Condition="[v_GetTextForITPANApplicability.ToLower.Equals(in_SelectITPANApplicability.ToLower)]" DisplayName="Check If ITPAN Applicability Is &quot;Yes&quot;" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="If_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="ITPAN Applicability Yes" sap:VirtualizedContainerService.HintSize="663,653" sap2010:WorkflowViewState.IdRef="Sequence_50">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[String.IsNullOrEmpty(in_ITPANApplicability)]" DisplayName="Check If ITPAN Applicability Is Nothing" sap:VirtualizedContainerService.HintSize="621,461" sap2010:WorkflowViewState.IdRef="If_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="ITPAN Applicability Is Nothing" sap:VirtualizedContainerService.HintSize="376,304" sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_59" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage" />
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel" />
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign DisplayName="Actual ITPAN Applicability Is Nothing" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_ActualITPANApplicability]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["User Has Not Entered ITPAN Applicability"]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <If Condition="[CInt(in_ITPANApplicability.Length)&lt;=8]" DisplayName="Check If ITPAN Applicability Has More Than 8 Characters" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Less Than 8 Characters" sap:VirtualizedContainerService.HintSize="304,243" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Enter ITPAN Applicability" EmptyField="True" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="TypeInto_2" SimulateType="True" Text="[in_ITPANApplicability]">
                              <ui:TypeInto.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ff3421f2-899c-46a8-9189-daa6c6037f2a" InformativeScreenshot="8550e83f0fe4c0d485988162179626c0" Selector="&lt;webctrl aaname='ITPAN Applicability' tag='LABEL' /&gt;&lt;nav up='4' /&gt;&lt;webctrl tag='INPUT' type='text' /&gt;" WaitForReady="COMPLETE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:TypeInto.Target>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:TypeInto>
                            <Assign DisplayName="Actual ITPAN Applicability " sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_ActualITPANApplicability]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[in_ITPANApplicability]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="More Than 8 Characters" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Entered More Than 8 Characters In ITPAN Applicability</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Assign DisplayName="Actual ITPAN Applicability Is Incorrect" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_ActualITPANApplicability]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["User Has Entered More Than 8 Characters In ITPAN Applicability"]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </If.Else>
                  </If>
                  <Assign DisplayName="Actual Select ITPAN Applicability Yes" sap:VirtualizedContainerService.HintSize="621,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_ActualSelectITPANApplicability]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <If Condition="[(v_GetTextForITPANApplicability.ToLower.Equals(&quot;no&quot;) And in_SelectITPANApplicability.ToLower.Equals(&quot;yes&quot;)) Or (v_GetTextForITPANApplicability.ToLower.Equals(&quot;yes&quot;) And in_SelectITPANApplicability.ToLower.Equals(&quot;no&quot;))]" DisplayName="Check If No" sap:VirtualizedContainerService.HintSize="507,223" sap2010:WorkflowViewState.IdRef="If_33">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Select ITPAN Yes" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_72">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[String.IsNullOrEmpty(in_ITPANApplicability)]" DisplayName="Check If ITPAN Applicability Is Nothing" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="If_35">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="ITPAN Nothing" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_75">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_60" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Assign DisplayName="Actual ITPAN Nothing" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_ActualITPANApplicability]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["User Has Not Entered ITPAN Applicability"]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <If Condition="[CInt(in_ITPANApplicability.Length)&lt;=8]" DisplayName="Check If ITPAN Applicability Has More Than 8 Characters" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_34">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Less Than 8 Characters" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click ITPAN Applicability Radio Button" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="Click_15" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                                  <ui:Click.CursorPosition>
                                    <ui:CursorPosition Position="Center">
                                      <ui:CursorPosition.OffsetX>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetX>
                                      <ui:CursorPosition.OffsetY>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetY>
                                    </ui:CursorPosition>
                                  </ui:Click.CursorPosition>
                                  <ui:Click.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5cb9cb8e-4056-46b5-8f18-c49569490a60" InformativeScreenshot="4f068896de88e2e705f1d902be2d4b60" Selector="&lt;webctrl aria-role='checkbox' idx='2' parentid='p-tabpanel-1' tag='DIV' /&gt;" WaitForReady="COMPLETE">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                    </ui:Target>
                                  </ui:Click.Target>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:Click>
                                <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Enter ITPAN Applicability" EmptyField="True" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="TypeInto_11" SimulateType="True" Text="[in_ITPANApplicability]">
                                  <ui:TypeInto.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ff3421f2-899c-46a8-9189-daa6c6037f2a" InformativeScreenshot="8550e83f0fe4c0d485988162179626c0" Selector="&lt;webctrl css-selector='body&amp;gt;app-root&amp;gt;app-main-template&amp;gt;div&amp;gt;div&amp;gt;app-scheme-details&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-tabview&amp;gt;div&amp;gt;div&amp;gt;p-tabpanel&amp;gt;div&amp;gt;app-guarantee-details-form&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;app-global-input-group&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;input' idx='2' parentid='p-tabpanel-1' tag='INPUT' type='text' /&gt;" WaitForReady="COMPLETE">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                    </ui:Target>
                                  </ui:TypeInto.Target>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:TypeInto>
                                <Assign DisplayName="Actual ITPAN" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[out_ActualITPANApplicability]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[in_ITPANApplicability]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="More Than 8 Characters" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Entered More Than 8 Characters In ITPAN Applicability</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeWorkflowFile>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[out_ActualITPANApplicability]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["User Has Entered More Than 8 Characters In ITPAN Applicability"]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                        </If.Else>
                      </If>
                      <Assign DisplayName="Actual Select ITPAN Yes" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_61">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_ActualSelectITPANApplicability]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Yes</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Assign DisplayName="Actual Select ITPAN No" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_ActualSelectITPANApplicability]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">No</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </If.Else>
            </If>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text For UAM Applicability" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_3">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="551caadb-7f84-4165-8f13-b0ee32af451d" InformativeScreenshot="10a5314028690c8f0704a2cfe10ab0c7" Selector="&lt;webctrl aaname='UAM Applicability' tag='LABEL' /&gt;&lt;nav up='3' /&gt;&lt;webctrl tag='SPAN' css-selector='body&amp;gt;app-root&amp;gt;app-main-template&amp;gt;div&amp;gt;div&amp;gt;app-scheme-details&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-tabview&amp;gt;div&amp;gt;div&amp;gt;p-tabpanel&amp;gt;div&amp;gt;app-guarantee-details-form&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;app-global-toggle&amp;gt;form&amp;gt;div&amp;gt;span' /&gt;" WaitForReady="COMPLETE">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                </ui:Target>
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[v_GetTextForUAMApplicability]</OutArgument>
              </ui:GetValue.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:GetValue>
            <If sap2010:Annotation.AnnotationText="UAM Applicability" Condition="[v_GetTextForUAMApplicability.ToLower.Equals( in_SelectUAMApplicability.ToLower)]" DisplayName="Check If UAM Applicability Is &quot;Yes&quot;" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="If_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="UAM Applicability Yes" sap:VirtualizedContainerService.HintSize="1260,901" sap2010:WorkflowViewState.IdRef="Sequence_51">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[String.IsNullOrEmpty(in_UAMApplicability)]" DisplayName="Check If UAM Applicability Is Nothing" sap:VirtualizedContainerService.HintSize="1218,709" sap2010:WorkflowViewState.IdRef="If_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="UAM Applicability Nothing" sap:VirtualizedContainerService.HintSize="376,456" sap2010:WorkflowViewState.IdRef="Sequence_13">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Not Entered UAM Applicability</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign DisplayName="Actual UAM Applicability Nothing" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_ActualUAMApplicability]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["User Has Not Entered UAM Applicability"]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <If Condition="[CInt(in_UAMApplicability.Length)&lt;=8]" DisplayName="Check If UAM Applicability Has More Than 8 Characters" sap:VirtualizedContainerService.HintSize="797,552" sap2010:WorkflowViewState.IdRef="If_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Less Than 8 Characters" sap:VirtualizedContainerService.HintSize="376,326" sap2010:WorkflowViewState.IdRef="Sequence_14">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Enter UAM Applicability" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_3" SimulateType="True" Text="[in_UAMApplicability]">
                              <ui:TypeInto.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ff3421f2-899c-46a8-9189-daa6c6037f2a" InformativeScreenshot="823e3a0a0e481033de478d2cc885433a" Selector="&lt;webctrl aaname='UAM Applicability' tag='LABEL' /&gt;&lt;nav up='4' /&gt;&lt;webctrl tag='INPUT' type='text' /&gt;" WaitForReady="COMPLETE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:TypeInto.Target>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:TypeInto>
                            <Assign DisplayName="Actual UAM Applicability" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_ActualUAMApplicability]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[in_UAMApplicability]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="More Than 8 Characters" sap:VirtualizedContainerService.HintSize="376,395" sap2010:WorkflowViewState.IdRef="Sequence_15">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Entered More Than 8 Characters In UAM Applicability</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Assign DisplayName="Actual UAM Applicability Incorrect" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_ActualUAMApplicability]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["User Has Entered More Than 8 Characters In UAM Applicability"]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </If.Else>
                  </If>
                  <Assign DisplayName="Actual UAM Applicability Yes" sap:VirtualizedContainerService.HintSize="970,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_ActualSelectUAMApplicability]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <If Condition="[(v_GetTextForUAMApplicability.ToLower.Equals(&quot;no&quot;) And in_SelectUAMApplicability.ToLower.Equals(&quot;yes&quot;)) Or (v_GetTextForUAMApplicability.ToLower.Equals(&quot;yes&quot;) And in_SelectUAMApplicability.ToLower.Equals(&quot;no&quot;))]" DisplayName="Check If UAM Applicability No" sap:VirtualizedContainerService.HintSize="898,986" sap2010:WorkflowViewState.IdRef="If_36">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Select UAM Applicability Yes" sap:VirtualizedContainerService.HintSize="591,829" sap2010:WorkflowViewState.IdRef="Sequence_79">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click UAM Applicability Radio Button" sap:VirtualizedContainerService.HintSize="549,106" sap2010:WorkflowViewState.IdRef="Click_16" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5cb9cb8e-4056-46b5-8f18-c49569490a60" InformativeScreenshot="257f06f04d085ce9d0512ce33602149e" Selector="&lt;webctrl aria-role='checkbox' idx='3' parentid='p-tabpanel-1' tag='DIV' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:Click.Target>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:Click>
                      <If Condition="[String.IsNullOrEmpty(in_UAMApplicability)]" DisplayName="Check If UAM Applicability Is Nothing" sap:VirtualizedContainerService.HintSize="549,491" sap2010:WorkflowViewState.IdRef="If_38">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="UAm Applicability Nothing" sap:VirtualizedContainerService.HintSize="304,334" sap2010:WorkflowViewState.IdRef="Sequence_82">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_47" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Not Entered UAM Applicability</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_48" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Assign DisplayName="Actual UAM Nothing" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_ActualUAMApplicability]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["User Has Not Entered UAM Applicability"]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <If Condition="[CInt(in_UAMApplicability.Length)&lt;=8]" DisplayName="Check If UAM Applicability Has More Than 8 Characters" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_37">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Less Than 8 Characters" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_83">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Enter UAM Applicability" EmptyField="True" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="TypeInto_12" SimulateType="True" Text="[in_UAMApplicability]">
                                  <ui:TypeInto.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ff3421f2-899c-46a8-9189-daa6c6037f2a" InformativeScreenshot="823e3a0a0e481033de478d2cc885433a" Selector="&lt;webctrl css-selector='body&amp;gt;app-root&amp;gt;app-main-template&amp;gt;div&amp;gt;div&amp;gt;app-scheme-details&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-tabview&amp;gt;div&amp;gt;div&amp;gt;p-tabpanel&amp;gt;div&amp;gt;app-guarantee-details-form&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;app-global-input-group&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;input' idx='3' parentid='p-tabpanel-1' tag='INPUT' type='text' /&gt;" WaitForReady="COMPLETE">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                    </ui:Target>
                                  </ui:TypeInto.Target>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:TypeInto>
                                <Assign DisplayName="Actual UAM Applicability" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_63">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[out_ActualUAMApplicability]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[in_UAMApplicability]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="More Than 8 Characters" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_49" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Entered More Than 8 Characters In UAM Applicability</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeWorkflowFile>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_50" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <Assign DisplayName="Actual UAM Applicability Incorrect" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_64">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[out_ActualUAMApplicability]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["User Has Entered More Than 8 Characters In UAM Applicability"]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                        </If.Else>
                      </If>
                      <Assign DisplayName="Actual Select Applicability Yes" sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Assign_65">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_ActualSelectUAMApplicability]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Yes</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Assign DisplayName="Actual Select UAM Applicability No" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_70">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_ActualSelectUAMApplicability]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">No</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </If.Else>
            </If>
            <If Condition="[String.IsNullOrEmpty(in_ApplicationTypeOfLoan)]" DisplayName="Check_If_Application Type Of Loan Is Nothing" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_24">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Application Type Of Loan Nothing" sap:VirtualizedContainerService.HintSize="376,304" sap2010:WorkflowViewState.IdRef="Sequence_52">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Not Enterd The Type Of Application</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <Assign DisplayName="Actual Type Of Loan Nothing" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_ActualApplicationTypeOfLoan]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["User Has Not Enterd The Type Of Application"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Application Type Of Loan" sap:VirtualizedContainerService.HintSize="242,325" sap2010:WorkflowViewState.IdRef="Sequence_53">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="v_ApplicationTypeOfLoanExists" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click On Application Type Of Loan" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fa47ea3c-aa7b-4653-9cbe-e05e1026f1ea" InformativeScreenshot="6e7dda7fc045a0b102db43352fb1ec6b" Selector="&lt;webctrl id='industryTable' tag='TABLE' /&gt;&lt;webctrl tableRow='2' tag='SPAN' tableCol='1' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:Click.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:Click>
                  <ui:UiElementExists DisplayName="Input Element Exists" Exists="[v_ApplicationTypeOfLoanExists]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5a978a95-a389-4055-ac11-d9ea5a141785" InformativeScreenshot="d9182abaa14b41ea1ee2c1beb6bb0851" Selector="[String.Format(&quot;&lt;webctrl tag='LI' innertext='{0}*' casesensitive:innertext='false' /&gt;&quot;, in_ApplicationTypeOfLoan)]">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:UiElementExists.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:UiElementExists>
                  <If Condition="[v_ApplicationTypeOfLoanExists]" DisplayName="Check_If Input Is Exists" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_25">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="304,245.6" sap2010:WorkflowViewState.IdRef="Sequence_54">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click On Application Type Of Loan" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e78d60f3-a8c6-48b9-8ebd-5bcd32588815" InformativeScreenshot="d8d7067e20b8c808abc4c49e54fb1dd8" Selector="[String.Format(&quot;&lt;webctrl tag='LI' innertext='{0}*' casesensitive:innertext='false' isleaf='0' /&gt;&quot;, in_ApplicationTypeOfLoan)]" WaitForReady="COMPLETE">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                            </ui:Target>
                          </ui:Click.Target>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:Click>
                        <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_ActualApplicationTypeOfLoan]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[in_ApplicationTypeOfLoan]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="304,338.4" sap2010:WorkflowViewState.IdRef="Sequence_55">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">Entered Application Type Of Loan Is Not Available In Dropdown</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_ActualApplicationTypeOfLoan]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Entered Application Type Of Loan Is Not Available In Dropdown</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Else>
            </If>
            <If sap2010:Annotation.AnnotationText="Tenure(Maximum)" Condition="[in_Tenure=Nothing]" DisplayName="Check If Tenure Is Nothing" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="If_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Nothing" sap:VirtualizedContainerService.HintSize="376,456" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Not Entered Tenure</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_ActualTenure]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">User Has Not Entered Tenure</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <If Condition="[CInt(in_Tenure.Length)&gt;3]" DisplayName="Check If Tenure Is Greater Than 99" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_11">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,334" sap2010:WorkflowViewState.IdRef="Sequence_20">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Entered More Than 3 Letters In Tenure</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_ActualTenure]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["User Has Entered More Than 3 Letters In Tenure"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,243" sap2010:WorkflowViewState.IdRef="Sequence_21">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Enter Tenure" EmptyField="True" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="TypeInto_4" SimulateType="True" Text="[in_Tenure]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="20bba6ed-2352-42e5-8f0b-045f934850d8" InformativeScreenshot="506753c53a51d5da5c8fae06ab9a40df" Selector="&lt;webctrl id='industryTable' tag='TABLE' /&gt;&lt;webctrl tableRow='2' tag='INPUT' colName='Tenure(Maximum)' tableCol='2' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:TypeInto.Target>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:TypeInto>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_ActualTenure]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[in_Tenure]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
              </If.Else>
            </If>
            <If sap2010:Annotation.AnnotationText="Nature of Industry" Condition="[in_NatureOfIndustry=Nothing]" DisplayName="Check If Nature Of Industry Is Nothing" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="If_26">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,304" sap2010:WorkflowViewState.IdRef="Sequence_56">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Not Entered Nature Of Industry</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_ActualNatureOfIndustry]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">User Has Not Entered Nature Of Industry</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="376,415" sap2010:WorkflowViewState.IdRef="Sequence_57">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click On Nature Of Industry" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fa47ea3c-aa7b-4653-9cbe-e05e1026f1ea" InformativeScreenshot="6e7dda7fc045a0b102db43352fb1ec6b" Selector="&lt;webctrl id='industryTable' tag='TABLE' /&gt;&lt;webctrl tableRow='2' tag='SPAN' colName='Nature of Industry' tableCol='3' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:Click.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:Click>
                  <ui:UiElementExists DisplayName="Nature Of Industry Exists" Exists="[v_NatureOfIndustryExists]" sap:VirtualizedContainerService.HintSize="334,86" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a12d4864-5e16-4425-aa42-5f215e426a30" Selector="[String.Format(&quot;&lt;webctrl tag='LI' innertext='{0}*' casesensitive:innertext='false' /&gt;&quot;, in_NatureOfIndustry)]" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                  <If Condition="[v_NatureOfIndustryExists]" DisplayName="Check If Nature Of Industry Is Not Available In Dropdown" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_27">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="304,243" sap2010:WorkflowViewState.IdRef="Sequence_58">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Select Nature Of Industry" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e78d60f3-a8c6-48b9-8ebd-5bcd32588815" InformativeScreenshot="0a2b77bb23550187bd63da0343d500f6" Selector="[String.Format(&quot;&lt;webctrl tag='LI' innertext='{0}*' casesensitive:innertext='false' /&gt;&quot;, in_NatureOfIndustry)]" WaitForReady="COMPLETE">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                            </ui:Target>
                          </ui:Click.Target>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:Click>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_ActualNatureOfIndustry]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[in_NatureOfIndustry]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_59">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">Nature Of Industry Not Available In Dropdown</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_ActualNatureOfIndustry]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["Nature Of Industry Not Available In Dropdown"]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Else>
            </If>
            <If sap2010:Annotation.AnnotationText="Ceiling Limit" Condition="[in_CeilingLimit=Nothing]" DisplayName="Check If Ceiling Limit Is Nothing" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="If_12">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Nothing" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_25">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Not Entered Ceiling Limit</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_CeilingLimit]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["User Has Not Entered Ceiling Limit"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <If Condition="[CInt(in_CeilingLimit.Length)&gt;9]" DisplayName="Check If Ceiling Tenure Contains More Than 8 Digits" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,334" sap2010:WorkflowViewState.IdRef="Sequence_26">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Entered More Than 8 Letters In Ceiling Tenure</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_CeilingLimit]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["User Has Entered More Than 8 Letters In Ceiling Tenure"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,243" sap2010:WorkflowViewState.IdRef="Sequence_27">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Enter Ceiling Tenure" EmptyField="True" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="TypeInto_5" SimulateType="True" Text="[in_CeilingLimit]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="20bba6ed-2352-42e5-8f0b-045f934850d8" InformativeScreenshot="ded782e0180e1bc31d9c8a8a3af9330f" Selector="&lt;webctrl id='industryTable' tag='TABLE' /&gt;&lt;webctrl tableCol='4' tableRow='2' tag='INPUT' colName='Ceiling limit(Maximum)' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:TypeInto.Target>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:TypeInto>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_CeilingLimit]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[in_CeilingLimit]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
              </If.Else>
            </If>
            <If sap2010:Annotation.AnnotationText="Upper Limit" Condition="[in_UpperLimit=Nothing]" DisplayName="Check If Upper Limit Is Nothing" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="If_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Nothing" sap:VirtualizedContainerService.HintSize="376,397" sap2010:WorkflowViewState.IdRef="Sequence_28">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Not Entered Upper Limit</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_UpperLimit]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["User Has Not Entered Upper Limit"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <If Condition="[CInt(in_UpperLimit.Length)&gt;9]" DisplayName="Check If Upper Limit Contains More Than 8 Digits" sap:VirtualizedContainerService.HintSize="549,400" sap2010:WorkflowViewState.IdRef="If_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_29">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Entered More Than 8 Letters In Upper Limit</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_UpperLimit]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["User Has Entered More Than 8 Letters In Upper Limit"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,243" sap2010:WorkflowViewState.IdRef="Sequence_30">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Enter Upper Limit" EmptyField="True" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="TypeInto_6" SimulateType="True" Text="[in_UpperLimit]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="20bba6ed-2352-42e5-8f0b-045f934850d8" InformativeScreenshot="ded782e0180e1bc31d9c8a8a3af9330f" Selector="&lt;webctrl id='industryTable' tag='TABLE' /&gt;&lt;webctrl tableCol='5' tableRow='2' tag='INPUT' colName='Upper Limit' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:TypeInto.Target>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:TypeInto>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_UpperLimit]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[in_UpperLimit]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
              </If.Else>
            </If>
            <If sap2010:Annotation.AnnotationText="Moratorium Period" Condition="[in_UpperLimit=Nothing]" DisplayName="Check If Moratorium Period Is Nothing" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="If_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Nothing" sap:VirtualizedContainerService.HintSize="376,397" sap2010:WorkflowViewState.IdRef="Sequence_31">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Not Entered Moratorium Period</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_MoratoriumPeriod]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["User Has Not Entered Moratorium Period"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <If Condition="[CInt(in_MoratoriumPeriod.Length)&gt;4]" DisplayName="Check If Moratorium Period Contains More Than 3 Digits" sap:VirtualizedContainerService.HintSize="549,403" sap2010:WorkflowViewState.IdRef="If_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_32">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">User Has Entered More Than 4 Letters In Moratorium Period</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_MoratoriumPeriod]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["User Has Entered More Than 4 Letters In Moratorium Period"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,245.6" sap2010:WorkflowViewState.IdRef="Sequence_33">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Enter Moratorium Period" EmptyField="True" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="TypeInto_7" SimulateType="True" Text="[in_MoratoriumPeriod]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="20bba6ed-2352-42e5-8f0b-045f934850d8" InformativeScreenshot="63ce25c8884163999f752cb3e618f6b7" Selector="&lt;webctrl id='industryTable' tag='TABLE' /&gt;&lt;webctrl tableCol='6' tableRow='2' tag='INPUT' colName='Moratorium Period(Maximum)' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:TypeInto.Target>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:TypeInto>
                      <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_MoratoriumPeriod]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[in_MoratoriumPeriod]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
              </If.Else>
            </If>
            <If sap2010:Annotation.AnnotationText="Select Guarantee Start Date" Condition="[in_GuaranteeStartDate=Nothing]" DisplayName="Check_If_Guarantee Start Date is Available" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="If_22">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Guarantee_Start Date_Nothing" sap:VirtualizedContainerService.HintSize="376,304" sap2010:WorkflowViewState.IdRef="Sequence_45">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log FileGuarantee Start Date Nothing" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">Guarantee Duration Start Date Is Not Availablein_ApprovedForPayment</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <Assign DisplayName="Actual Guarantee Start Date Is Nothing" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_ActualGuaranteeStartDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Guarantee Duration Start Date Is Not Available</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Guarantee Satrt Date Is vailable" sap:VirtualizedContainerService.HintSize="421,295" sap2010:WorkflowViewState.IdRef="Sequence_46">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="v_Year" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Date_Conversion_StartDate workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Modules\A10\A10_2_\Date_Conversion_GuaranteeDetails_StartDate.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <OutArgument x:TypeArguments="x:String" x:Key="o_Month">[v_Month]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="o_Day">[v_Day]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="o_Year">[v_Year]</OutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_GuaranteeStartDate">[in_GuaranteeStartDate]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <If Condition="[DateTime.ParseExact(in_GuaranteeStartDate,&quot;dd-MM-yyyy&quot;,System.Globalization.CultureInfo.InvariantCulture) &gt; DateTime.ParseExact(in_SchemeStartDate.Replace(&quot;/&quot;,&quot;-&quot;),&quot;dd-MM-yyyy&quot;,System.Globalization.CultureInfo.InvariantCulture)]" DisplayName="Check If Guarantee End Date Is Under Scheme End Date" sap:VirtualizedContainerService.HintSize="379,51" sap2010:WorkflowViewState.IdRef="If_40">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Pick Guarantee Start Date" sap:VirtualizedContainerService.HintSize="421,304" sap2010:WorkflowViewState.IdRef="Sequence_88">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke DatePicker_Guarantee StartDate workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Modules\A10\A10_2_\DatePicker_GuaranteeDetails_StartDate.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Day">[v_Day]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Month">[v_Month]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Year">[v_Year]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <Assign DisplayName="Assign_Actual Guaratee Start Date" sap:VirtualizedContainerService.HintSize="379,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_ActualGuaranteeStartDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[in_GuaranteeStartDate]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Guarantee Start Date Is Less Than Scheme Start Date" sap:VirtualizedContainerService.HintSize="376,304" sap2010:WorkflowViewState.IdRef="Sequence_89">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">Guarantee Start Date Is Less Than Scheme Start Date</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <Assign DisplayName="Actual Guaratee Start Date Not Under Scheme" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_ActualGuaranteeStartDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Guarantee Start Date Is Less Than Scheme Start Date</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Else>
            </If>
            <If sap2010:Annotation.AnnotationText="Select Guarantee End Date" Condition="[in_GuaranteeEndDate=Nothing]" DisplayName="Check_If_Guarantee End Date is Available" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="If_23">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Guarantee_End Date_Nothing" sap:VirtualizedContainerService.HintSize="376,304" sap2010:WorkflowViewState.IdRef="Sequence_47">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">Guarantee Duration End Date Is Not Available</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_ActualGuaranteeEndDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Guarantee Duration End Date Is Not Available</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="708,705" sap2010:WorkflowViewState.IdRef="Sequence_48">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Date_Conversion_End Date workflow" sap:VirtualizedContainerService.HintSize="666,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Modules\A10\A10_2_\Date_Conversion_GuaranteeDetails_EndDate.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <OutArgument x:TypeArguments="x:String" x:Key="o_Month">[v_Month]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="o_Day">[v_Day]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="o_Year">[v_Year]</OutArgument>
                      <InOutArgument x:TypeArguments="x:String" x:Key="in_GuaranteeEndDate">[in_GuaranteeEndDate]</InOutArgument>
                      <InOutArgument x:TypeArguments="x:String" x:Key="DateMonthYear">[v_DateMonthYear]</InOutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <If Condition="[DateTime.ParseExact(in_GuaranteeEndDate,&quot;dd-MM-yyyy&quot;,System.Globalization.CultureInfo.InvariantCulture) &lt; DateTime.ParseExact(in_SchemeEndDate.Replace(&quot;/&quot;,&quot;-&quot;),&quot;dd-MM-yyyy&quot;,System.Globalization.CultureInfo.InvariantCulture)]" DisplayName="Check If Guarantee End Date Is Under Scheme End Date" sap:VirtualizedContainerService.HintSize="666,461" sap2010:WorkflowViewState.IdRef="If_39">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Pick Guarantee End Date" sap:VirtualizedContainerService.HintSize="421,304" sap2010:WorkflowViewState.IdRef="Sequence_86">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke DatePicker_Guarantee EndDate workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Modules\A10\A10_2_\DatePicker_GuaranteeDetails_EndDate.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Day">[v_Day]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Month">[v_Month]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Year">[v_Year]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="379,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_ActualGuaranteeEndDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[in_GuaranteeEndDate]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Guarantee Date Is Greater Than Scheme End Date" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_87">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_37" Text="Guarantee End Date Is Greater Than Scheme End Date" />
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">Guarantee End Date Is Greater Than Scheme End Date</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_69">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_ActualGuaranteeEndDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["Guarantee End Date Is Greater Than Scheme End Date"]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Else>
            </If>
            <TryCatch DisplayName="Success Message" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <Sequence DisplayName="Success Message" sap:VirtualizedContainerService.HintSize="526,607" sap2010:WorkflowViewState.IdRef="Sequence_62">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click On Next Button" sap:VirtualizedContainerService.HintSize="484,106" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="72211910-13d4-4540-b0d0-399f1e2358de" InformativeScreenshot="48c0f26a4c29a582a103c66ec49802e8" Selector="&lt;webctrl aaname='Next' tag='BUTTON' class='p-ripple p-element p-button p-component' parentclass='p-element button-popup save-btn' idx='2' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:Click.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:Click>
                  <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text For Guarantee Detail Message " sap:VirtualizedContainerService.HintSize="484,106" sap2010:WorkflowViewState.IdRef="GetValue_4">
                    <ui:GetValue.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1d67e913-5e8a-46a9-9e68-3df9ab0ecdc5" InformativeScreenshot="7b7bc62432d2eeaabd2a362e19e12102" Selector="&lt;webctrl aaname='Message' tag='SPAN' css-selector='body&amp;gt;app-root&amp;gt;app-main-template&amp;gt;div&amp;gt;div&amp;gt;app-scheme-details&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-tabview&amp;gt;div&amp;gt;div&amp;gt;p-tabpanel&amp;gt;div&amp;gt;app-guarantee-details-form&amp;gt;app-dialogue-popup&amp;gt;p-confirmdialog&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;span' /&gt;&lt;nav up='2' /&gt;&lt;webctrl css-selector='body&amp;gt;app-root&amp;gt;app-main-template&amp;gt;div&amp;gt;div&amp;gt;app-scheme-details&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-tabview&amp;gt;div&amp;gt;div&amp;gt;p-tabpanel&amp;gt;div&amp;gt;app-guarantee-details-form&amp;gt;app-dialogue-popup&amp;gt;p-confirmdialog&amp;gt;div&amp;gt;div&amp;gt;div' tag='DIV' idx='2' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:GetValue.Target>
                    <ui:GetValue.Value>
                      <OutArgument x:TypeArguments="x:String">[v_GetTextForGuranteeDetailMessage]</OutArgument>
                    </ui:GetValue.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:GetValue>
                  <If Condition="[v_GetTextForGuranteeDetailMessage.ToLower.Equals(&quot;record successfully added&quot;) or v_GetTextForGuranteeDetailMessage.ToLower.Equals(&quot;record updated successfully&quot;)]" DisplayName="Check If Scheme Detail Successfully Recorded Or Not" sap:VirtualizedContainerService.HintSize="484,223" sap2010:WorkflowViewState.IdRef="If_28">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_60">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click On Ok Button" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_10" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0df1473c-6f3f-4519-8be1-59acf305a910" InformativeScreenshot="ecccff5291a7055c3601ce11440ccb10" Selector="&lt;webctrl aaname='Ok' tag='BUTTON' css-selector='body&amp;gt;app-root&amp;gt;app-main-template&amp;gt;div&amp;gt;div&amp;gt;app-scheme-details&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-tabview&amp;gt;div&amp;gt;div&amp;gt;p-tabpanel&amp;gt;div&amp;gt;app-guarantee-details-form&amp;gt;app-dialogue-popup&amp;gt;p-confirmdialog&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;p-button&amp;gt;button' parentclass='p-element button-popup reset-btn ng-star-inserted' /&gt;" WaitForReady="COMPLETE">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_52">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[out_GuaranteeDetailsMessage]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_Status]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Pass</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_61">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click On Ok Button" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0df1473c-6f3f-4519-8be1-59acf305a910" InformativeScreenshot="0dae24c168060119ad7cdcf3a834c390" Selector="&lt;webctrl aaname='Ok' tag='BUTTON' /&gt;" WaitForReady="COMPLETE">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                            </ui:Target>
                          </ui:Click.Target>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:Click>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[out_GuaranteeDetailsMessage]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_Status]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Fail</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click On Dashboard" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_12" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a042acbc-8774-4f81-9896-69ef322fb61e" InformativeScreenshot="c576d4155d16f869a34dfcb78e404d52" Selector="&lt;webctrl tag='A' aaname='Dashboard' parentclass='new-menu-list' /&gt;" WaitForReady="COMPLETE">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                            </ui:Target>
                          </ui:Click.Target>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:Click>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="530,135" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_63">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Log File workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_43" UnSafe="False" WorkflowFileName="Framework Files\Log File.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">Mandatory Fields Has Not Entered By User Hence Doesn't Added The Guarantaee Details SuccessFully</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">Error</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Screenshots workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_44" UnSafe="False" WorkflowFileName="Framework Files\Screenshots.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[out_GuaranteeDetailsMessage]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[out_GuaranteeDetailsNextButtonDisabled]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_50">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_Status]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Fail</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click_To Dashboard" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_13" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4dfbaccf-b1d5-4861-92b4-5cb3f06835d4" InformativeScreenshot="3b550d707c1111d11b308a5ee1c95fda" Selector="&lt;webctrl tag='A' aaname='Dashboard' parentclass='new-menu-list' isleaf='0' /&gt;" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:Click.Target>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:Click>
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BrowserScope>
  </Sequence>
</Activity>